#
#
#Path to fluam
SRC_FLUAM=../src/

#
#
#Path to HydroGrid
#Uncomment if you have HydroGrid
#SRC_HYDROLIB=../../HydroGrid/


#
#
#Fortran compiler
FC = gfortran

#
#
#Cuda compiler
NVCC = nvcc
#NVCC = cuda-gdb


#
#
#Some libraries may be required
#CUDALIB=-L/usr/local/cuda-5.0/lib64 -lcurand

# Insert your own architecture or let the make file detect it
# ARCH=35
#If arch was not set, autodetect all GPUs in the system
ifeq ($(ARCH),)
GENCODE_FLAGS:=$(shell printf '\#include<cstdio>\n int main(){int nD;cudaGetDeviceCount(&nD);for(int i=0;i<nD;i++){cudaDeviceProp dp;cudaGetDeviceProperties(&dp, i);std::printf("%%d\\n", dp.major*10+dp.minor);} return 0;}' | $(NVCC) -Wno-deprecated-gpu-targets -x cu - -o /tmp/listarch --run | sort -g -k1 | uniq | awk 'END{system("rm -f /tmp/listarch")}{print "-gencode arch=compute_"$$1",code=sm_"$$1}')
else
$(foreach sm,$(ARCH),$(eval GENCODE_FLAGS += -gencode arch=compute_$(sm),code=sm_$(sm)))
endif

#
#
#Cuda flags
NVCCFLAGS = -O3 $(GENCODE_FLAGS) --compiler-bindir /usr/bin/gcc $(CUDALIB)

#
#Other flags you may want to add
#-use_fast_math
#-deviceemu
#-ptxas-options=-v
#-g -G #debug mode

#
#
#Fortran flags
FCFLAGS = -O -Wall -ffree-line-length-none # Optimized

#
#
#Executable name
EFILE = fluam

#
#
#Includes for fluam,
NVCCINCLS = -I./ -I$(SRC_FLUAM) 

#
#
#Includes for fluam, path to cutil.h file
#We assume NVIDIA_GPU_Computing_SDK is in the user HOME
#NVIDIA_GPU_Computing_SDK is needed for the cutil.h files
#NVCCINCLS += -I$(HOME)/NVIDIA_GPU_Computing_SDK/C/common/inc/
NVCCINCLS +=

#
#
#Includes to HydroGrid
HydroAnalisysINCL = -I$(SRC_HYDROLIB)

#
#
#Libraries
LIBRARIES = -L/usr/local/cuda/lib64 -lcurand

#
#
#Objects
OBJS=
